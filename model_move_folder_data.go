/*
DocSpring API

DocSpring provides an API that helps you fill out and sign PDF templates.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package docspring

import (
	"encoding/json"
)

// checks if the MoveFolderData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoveFolderData{}

// MoveFolderData struct for MoveFolderData
type MoveFolderData struct {
	ParentFolderId *string `json:"parent_folder_id,omitempty"`
}

// NewMoveFolderData instantiates a new MoveFolderData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveFolderData() *MoveFolderData {
	this := MoveFolderData{}
	return &this
}

// NewMoveFolderDataWithDefaults instantiates a new MoveFolderData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveFolderDataWithDefaults() *MoveFolderData {
	this := MoveFolderData{}
	return &this
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise.
func (o *MoveFolderData) GetParentFolderId() string {
	if o == nil || IsNil(o.ParentFolderId) {
		var ret string
		return ret
	}
	return *o.ParentFolderId
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveFolderData) GetParentFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentFolderId) {
		return nil, false
	}
	return o.ParentFolderId, true
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *MoveFolderData) HasParentFolderId() bool {
	if o != nil && !IsNil(o.ParentFolderId) {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given string and assigns it to the ParentFolderId field.
func (o *MoveFolderData) SetParentFolderId(v string) {
	o.ParentFolderId = &v
}

func (o MoveFolderData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoveFolderData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParentFolderId) {
		toSerialize["parent_folder_id"] = o.ParentFolderId
	}
	return toSerialize, nil
}

type NullableMoveFolderData struct {
	value *MoveFolderData
	isSet bool
}

func (v NullableMoveFolderData) Get() *MoveFolderData {
	return v.value
}

func (v *NullableMoveFolderData) Set(val *MoveFolderData) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveFolderData) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveFolderData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveFolderData(val *MoveFolderData) *NullableMoveFolderData {
	return &NullableMoveFolderData{value: val, isSet: true}
}

func (v NullableMoveFolderData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveFolderData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


